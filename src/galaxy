#!/usr/bin/env php
<?php
include(__DIR__.'/../../../autoload.php');
use IsraelNogueira\galaxyDB\galaxyDB;


class cli{
	static public function parseArgs($argv = null){
		$argv = $argv ? $argv : $_SERVER['argv'];
		array_shift($argv);
		$o = [];
		for ($i = 0, $j = count($argv); $i < $j; $i++) {
			$a = $argv[$i];
			if (substr($a, 0, 2) == '--') {
				$eq = strpos($a, '=');
				if ($eq !== false) {
					$o[substr($a, 2, $eq - 2)] = substr($a, $eq + 1);
				} else {
					$k = substr($a, 2);
					if ($i + 1 < $j && $argv[$i + 1][0] !== '-') {
						$o[$k] = $argv[$i + 1];
						$i++;
					} elseif (!isset($o[$k])) {
						$o[$k] = true;
					}
				}
			} elseif (substr($a, 0, 1) == '-') {
				if (substr($a, 2, 1) == '=') {
					$o[substr($a, 1, 1)] = substr($a, 3);
				} else {
					foreach (str_split(substr($a, 1)) as $k) {
						if (!isset($o[$k])) {
							$o[$k] = true;
						}
					}
					if ($i + 1 < $j && $argv[$i + 1][0] !== '-') {
						$o[$k] = $argv[$i + 1];
						$i++;
					}
				}
			} else {
				$o[] = $a;
			}
		}
		return $o;
	}
	static public function modeloModel($modelo='myClass') {

return '<?
	namespace IsraelNogueira\Models;
	use IsraelNogueira\galaxyDB\galaxyDB;

	class '.$modelo.'Model extends galaxyDB{

		protected $table				=  "'.$modelo.'";
		protected $columnsBlocked		= [];
		protected $columnsEnabled		= [];
		protected $functionsBlocked		= [];
		protected $functionsEnabled		= [];
		protected $charactersEnabled	= [];
		protected $charactersBlocked	= [];

		public function exemplo_de_extend_function() {
			return $this->join("LEFT", "minha_tabela minha"," minha.code='.$modelo.'.code");
		}

	}

?>';

	}

	static public function color($cor='vermelho',$_TEXT=null) {try{
		//ˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑ
			$_COLOR['branco']	="\033[0;97m";
			$_COLOR['preto']	="\033[0;30m";
			$_COLOR['vermelho'] ="\033[0;31m";
			$_COLOR['verde']    ="\033[0;32m";
			$_COLOR['amarelo']	="\033[0;33m";
			$_COLOR['azul']     ="\033[0;34m";
			$_COLOR['magenta']  ="\033[0;35m";
			$_COLOR['ciano']    ="\033[0;36m";
			$_COLOR['roxo']   	="\033[0;35m";
			$_COLOR['cinza']  	="\033[1;30m";
			$_COLOR['end']		="\033[0m";
			return $_COLOR[$cor] . $_TEXT.  $_COLOR['end'];
		//ˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑˑ
	} catch (\Throwable $ERROR) {die(print_r($ERROR->getMessage(),0));}}

	static public function formatarString($str) {
		$str = preg_replace_callback('/[\p{L} ]/u', function ($match) {
			return str_replace(' ', '', iconv('UTF-8', 'ASCII//TRANSLIT', $match[0]));
		}, $str);
		$str = ucwords($str);
		$str = str_replace([' ', '-'], '', $str);
		$str = lcfirst($str);
		return $str;
	}

    static public function createEnv($_DATA) {
		$_StringFile = ''
						.PHP_EOL.'DB_HOST='.$_DATA['host']
						.PHP_EOL.'DB_PORT='.($_DATA['port']??'3306')
						.PHP_EOL.'DB_DATABASE='.$_DATA['name']
						.PHP_EOL.'DB_TYPE='.$_DATA['type']
						.PHP_EOL.'DB_USERNAME='.$_DATA['user']
						.PHP_EOL.'DB_PASSWORD='.$_DATA['pass']
						.PHP_EOL.'DB_CHAR='.($_DATA['']??'')
						.PHP_EOL.'DB_FLOW='.($_DATA['']??'')
						.PHP_EOL.'DB_FKEY='.($_DATA['']??'');
		file_put_contents(__DIR__.DIRECTORY_SEPARATOR.'.env',$_StringFile);
		echo self::color('verde','Configurações salvas com sucesso!').PHP_EOL;				

	}
    static public function createSnippet() {
		$showTables			= new galaxyDB();
		$Tables				= $showTables->showDBTables();
		$_SNIPPET_TABELAS	= [];
		$_SNIPPET_TABELAS["Galaxy: ->table()"]	=["prefix"=>["->table"],"body"=>['${1|->table("'.implode('");,->table("',$Tables).'");|}']];
		$_SNIPPET_TABELAS["Galaxy: TableName"]	=["prefix"=>["Tables"],"body"=>['${1|'.implode(',',$Tables).'|}']];
		$_SNIPPET_TABELAS["Galaxy: Lista tabelas"]	=["prefix"=>["tables", "tabelas", "lista"],"body"=>['/*'.PHP_EOL.'	•'.implode(PHP_EOL.'	•',$Tables).PHP_EOL.'*/']];
		$showColunms		= new galaxyDB();
		foreach ($Tables as $_table) {
			$_colunas = $showColunms->showDBColumns($_table);
			$_SNIPPET_TABELAS[$_table.' ->colum()']=["prefix"=>['->colum'],"body"	=>['${1|->colum("'.implode('");,->colum("',$_colunas).'");|}']];
			$_SNIPPET_TABELAS[$_table.' ColumName']=["prefix"=>['colum'],"body"	=>['${1|'.implode(',',$_colunas).'|}']];
			$_SNIPPET_TABELAS[$_table.' Lista colunas']=["prefix"=>['lista','columns','colunas'],"body"	=>['/*'.PHP_EOL.'	Colunas da tabela "'.$_table.'":'.PHP_EOL.'	•'.implode(PHP_EOL.'	•',$_colunas).PHP_EOL.'*/']];
		}
		return json_encode($_SNIPPET_TABELAS,JSON_PRETTY_PRINT);
	}


    static public function processCommands($_ARGS=null) {

		if(is_null($_ARGS)) throw new Exception("Param is null em classe::methodo", 1);
		$PATH		= str_replace('\\',DIRECTORY_SEPARATOR,realpath(__DIR__.'/../../../../'));
		$_PARAMS	= self::parseArgs($_ARGS);



		if($_PARAMS[0]=='config-connection'){
			unset($_PARAMS[0]);
			if(		
					!array_key_exists('type',$_PARAMS) 
				||	!array_key_exists('user',$_PARAMS) 
				||	!array_key_exists('pass',$_PARAMS) 
				||	!array_key_exists('name',$_PARAMS) 
				||	!array_key_exists('host',$_PARAMS)
			){
				echo self::color('vermelho','Ops, está faltando alguns dados.').PHP_EOL.PHP_EOL;
				echo self::color('amarelo','Execute o seguinte comando, substituindo com seus dados:').PHP_EOL;				
				echo self::color('cinza','|=====================================================================================================').PHP_EOL;
				echo self::color('cinza','|').PHP_EOL; 
				echo self::color('cinza','|	composer run-script galaxy config-connection -- --type=mysql --user=root --pass= --name=meuDB --host=localhost --port= --char= --flow= --fkey=').PHP_EOL;
				echo self::color('cinza','|').PHP_EOL;
				echo self::color('cinza','|=====================================================================================================').PHP_EOL;
			}else{
				echo self::createEnv($_PARAMS);
			};
		}


			
		
		exit;
		if($_PARAMS[0]=='update-snippets'){

			echo self::color('amarelo','Atualizando atalhos GalaxyDB').PHP_EOL;
			$_pathSnippet = str_replace('\\',DIRECTORY_SEPARATOR,realpath(__DIR__.'/../../../../'));
			@mkdir($_pathSnippet.'/.vscode',0777,true);
			$_dbSnippet = str_replace(['\\','/'],DIRECTORY_SEPARATOR,$_pathSnippet.'/.vscode/galaxy-db.code-snippets');
			$_galaxySnippet1 = str_replace(['\\','/'],DIRECTORY_SEPARATOR,$_pathSnippet.'/vendor/israel-nogueira/galaxy-db/.vscode/galaxy.code-snippets');
			$_galaxySnippet2 = str_replace(['\\','/'],DIRECTORY_SEPARATOR,$_pathSnippet.'/.vscode/galaxy.code-snippets');
			copy($_galaxySnippet1,$_galaxySnippet2);
			file_put_contents($_dbSnippet, self::createSnippet());
			echo self::color('verde','Atalhos atualizados com sucesso!').PHP_EOL;
		}

		if($_PARAMS[0]=='new-model'){
			unset($_PARAMS[0]);
			$JSON		= $PATH.DIRECTORY_SEPARATOR.'composer.json';
			$_COMPOSER	= json_decode(file_get_contents($JSON),true);
			if(
				empty($_COMPOSER['autoload']) || 
				empty($_COMPOSER['autoload']['psr-4']) ||
				empty($_COMPOSER['autoload']['psr-4']['IsraelNogueira\Models\\'])
			){
				$_COMPOSER['autoload']['psr-4']["IsraelNogueira\\Models\\"] = 'app/Models/';
			}
			@mkdir($PATH.DIRECTORY_SEPARATOR.'app',0777,true);
			@mkdir($PATH.DIRECTORY_SEPARATOR.'app'.DIRECTORY_SEPARATOR.'Models',0777,true);
			file_put_contents($JSON, json_encode($_COMPOSER,JSON_PRETTY_PRINT|JSON_UNESCAPED_SLASHES));
			foreach ($_PARAMS as $value) {
				$Classe = $PATH.DIRECTORY_SEPARATOR.'app'.DIRECTORY_SEPARATOR.'Models'.DIRECTORY_SEPARATOR.self::formatarString($value).'.php';
				file_put_contents($Classe, self::modeloModel($value));
				echo self::color('amarelo','Criando model "'.$value.'"').PHP_EOL;
			}
			$output = shell_exec('composer dump-autoload');
			die(self::color('verde',$output));
		}
	}
}
cli::processCommands($argv);